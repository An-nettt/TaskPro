{"version":3,"file":"static/js/554.a8531e6b.chunk.js","mappings":"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","sources":["components/registerForm/RegisterSchema.jsx","components/registerForm/RegisterForm.styled.jsx","components/registerForm/RegisterForm.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n  .min(2, 'Name must be at least 2 characters')\n  .max(32, 'Name must be at most 32 characters')\n  .required('Name is required'),\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n  .min(8, 'Password must be at least 8 characters')\n  .max(64, 'Password must be at most 64 characters')\n  .required('Password is required'),\n});\n\n  export default RegisterSchema","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100%;\n    background:linear-gradient( 180deg, #ffffff 0%,  #ffffff 25%, #bedbb0 92.19%);\n    background-repeat: no-repeat;\n    background-size: cover;\n`\nconst FormContainer = styled.div `\n  text-align: center;\n  background: #151515;\n  border-radius: 8px;\n  padding: 40px;\n`\nconst LinkMenu = styled.div`\n  display: flex;\n`;\n\n\nconst LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: rgba(255, 255, 255, 0.30);\n  text-decoration: none;\n`;\n\nconst RegisterLink = styled(Link)`\n  margin-right: 14px;\n  display: inline-block;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: #FFF;\n  text-decoration: none;\n`;\n\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 326px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: #FFF;\n    background: #1F1F1F;\n    opacity: 0.4;\n    border: 1px solid #BEDBB0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n    @media screen and (max-width: 768px) {\n      width: 287px;\n  }\n  }\n`;\n\nconst RegisterBtn = styled.button`\n    font-style: normal;\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 21px;\n    text-align: center;\n    letter-spacing: -0.02em;\n    width: 100%;\n    height: 49px;\n    margin-top: 24px;\n    background: #BEDBB0;\n    border-radius: 8px;\n    color: #161616;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.8;\n    }\n    @media screen and (max-width: 768px) {\n      width: 287px;\n  }\n`;\n\nconst PasswordInput = styled.div `\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 14px;\n`\nconst  Passwordsvg = styled.svg`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n  color: #fff;\n  width: 16.5px;\n  height: 16px;\n  right: 15px;\n  opacity: 0.4;\n`;\nconst ErrorText = styled.div`\n  font-size: 15px;\n  color: white;\n`;\nexport  {Container, FormContainer, LinkMenu, RegisterLink, LoginLink, InputField , RegisterBtn,Passwordsvg,PasswordInput, ErrorText   }\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport RegisterSchema from \"./RegisterSchema\";\n// import {  Link } from \"react-router-dom\";\nimport { Container, ErrorText, FormContainer, InputField, LinkMenu, LoginLink, PasswordInput, Passwordsvg, RegisterBtn, RegisterLink } from \"./RegisterForm.styled\";\nimport { register } from \"redux/auth/authOperations\";\nimport { toast } from \"react-hot-toast\";\nimport sprite from '../../components/iconSvg/icon.svg';\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [showPassword, setShowPassword] = useState(false);\n\n    const formik = useFormik({\n      initialValues: {\n        name: '',\n        email: '',\n        password: '',\n      },\n      validationSchema: RegisterSchema, \n     nSubmit: async values => {\n        try {\n          await dispatch(register({ name: values.name, email: values.email, password: values.password })).unwrap();\n        toast.success('You have registered successfully!!!')\n        formik.resetForm();\n        } catch (error) {\n          toast.error(\"Oops, it's looks like something went wrong... Please, try again!\")\n        }\n       } \n      },);\n\n      const togglePasswordVisibility = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword);\n      };\n    return (   <Container> \n      <FormContainer> \n        <form onSubmit={formik.handleSubmit}>\n            <LinkMenu>\n              <RegisterLink to=\"/auth/register\" underline=\"none\"> Registration </RegisterLink>\n              <LoginLink to=\"/auth/login\" underline=\"none\"> Log In </LoginLink >\n            </LinkMenu>\n        <InputField>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.name}\n            placeholder=\"Enter your name\"\n          />\n          {formik.touched.name && formik.errors.name ? (\n      <ErrorText>{formik.errors.name}</ErrorText>) : null}\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n          placeholder=\"Enter your email\"\n/>\n      {formik.touched.email && formik.errors.email ? (\n      <ErrorText>{formik.errors.email}</ErrorText>) : null}\n          <PasswordInput><input\n           type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            placeholder=\"Create a password\"\n          />\n          <Passwordsvg  width=\"18px\" onClick={togglePasswordVisibility}> < use href={`${sprite}#icon-eye`}></use> </Passwordsvg > </PasswordInput>\n          {formik.touched.password && formik.errors.password ? (\n            <ErrorText>{formik.errors.password}</ErrorText>\n          ) : null}\n        </InputField>\n        <RegisterBtn type=\"submit\">Register Now</RegisterBtn>\n      </form>\n      </FormContainer >\n      </Container>) \n};\n\nexport default RegisterForm;"],"names":["Yup","shape","name","min","max","required","email","password","Container","styled","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","LinkMenu","_templateObject3","LoginLink","Link","_templateObject4","RegisterLink","_templateObject5","InputField","_templateObject6","RegisterBtn","_templateObject7","PasswordInput","_templateObject8","Passwordsvg","_templateObject9","ErrorText","_templateObject10","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","formik","useFormik","initialValues","validationSchema","RegisterSchema","nSubmit","_nSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","register","unwrap","toast","resetForm","t0","stop","_x","apply","arguments","_jsx","children","_jsxs","onSubmit","handleSubmit","to","underline","type","id","onChange","handleChange","onBlur","handleBlur","value","placeholder","touched","errors","width","onClick","prevShowPassword","href","concat","sprite"],"sourceRoot":""}